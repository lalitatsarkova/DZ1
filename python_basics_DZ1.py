#!/usr/bin/env python
# coding: utf-8

# **Задание 1**. Даны 2 строки: *long_phrase* и *short_phrase*. 
# Напишите код, который проверяет действительно ли длинная фраза *long_phrase* длиннее короткой *short_phrase*. И выводит *True* или *False* в зависимости от результата сравнения.

# In[1]:


long_phrase = 'Насколько проще было бы писать программы, если бы не заказчики'
short_phrase = '640Кб должно хватить для любых задач. Билл Гейтс (по легенде)'
len(long_phrase) > len(short_phrase)


# **Задание 2**. Дано значение объема файла в байтах (*в мегабайте 2^20 байт*). Напишите перевод этого значения в мегабайты в формате: "*Объем файла равен 213.68Mb*".

# In[3]:


volume_byte = 2000000
volume_megabyte = volume_byte / 1048576
volume_rounded = round(volume_megabyte,2)
print('Объем файла равен', volume_rounded, "Mb")


# **Задание 3**. Разработать приложение для определения знака зодиака по дате рождения. Пример:
# 
# Введите месяц: март
# 
# Введите число: 6
# 
# Вывод:
# Рыбы

# In[4]:


day = int(input("Введите число: "))
month = input("Введите месяц: ")
if month == 'декабрь':
	astro_sign = 'Стрелец' if (day < 22) else 'Козерог'
elif month == 'январь':
	astro_sign = 'Козерог' if (day < 20) else 'Водолей'
elif month == 'февраль':
	astro_sign = 'Водолей' if (day < 19) else 'Рыбы'
elif month == 'март':
	astro_sign = 'Рыбы' if (day < 21) else 'Овен'
elif month == 'апрель':
	astro_sign = 'Овен' if (day < 20) else 'Телец'
elif month == 'май':
	astro_sign = 'Телец' if (day < 21) else 'Близнецы'
elif month == 'июнь':
	astro_sign = 'Близнецы' if (day < 21) else 'Рак'
elif month == 'июль':
	astro_sign = 'Рак' if (day < 23) else 'Лев'
elif month == 'август':
	astro_sign = 'Лев' if (day < 23) else 'Дева'
elif month == 'сентябрь':
	astro_sign = 'Дева' if (day < 23) else 'Весы'
elif month == 'октябрь':
	astro_sign = 'Весы' if (day < 23) else 'Скорпион'
elif month == 'ноябрь':
	astro_sign = 'Скорпион' if (day < 22) else 'Стрелец'
print("Ваш знак зодиака:",astro_sign)


# **Задание 4**. Нужно разработать приложение для финансового планирования.
# Приложение учитывает сколько уходит на ипотеку, "на жизнь" и сколько нужно отложить на пенсию.
# Пользователь вводит:
# - заработанную плату в месяц.
# - сколько процентов от ЗП уходит на ипотеку.
# - сколько процентов от ЗП уходит "на жизнь".
# - сколько раз приходит премия в год.
# 
# Остальная часть заработанной платы откладывается на пенсию.
# 
# Также пользователю приходит премия в размере зарплаты, от которой половина уходит на отпуск, а вторая половина откладывается.
# 
# Программа должна учитывать сколько премий было в год.
# 
# Нужно вывести сколько денег тратит пользователь на ипотеку и сколько он накопит за год.
# 
# Пример:
# 
# Введите заработанную плату в месяц: 100000
# 
# Введите сколько процентов уходит на ипотеку: 30
# 
# Введите сколько процентов уходит на жизнь: 50
# 
# Введите количество премий за год: 2
# 
# Вывод:
# На ипотеку было потрачено: 360000 рублей
# Было накоплено: 340000 рублей

# In[21]:


salary = int(input("Введите заработанную плату в месяц: "))
livelihood = input("Введите сколько процентов уходит на жизнь: ")
mortgage = input("Введите сколько процентов уходит на ипотеку: ")
bonus = input("Введите количество премий за год: ")
mortgage_yearly_spend = int(salary) * int(mortgage) * 12 / 100 
yearly_salary = int(salary) * 12
percentage_left = 100 - int(livelihood) - int(mortgage)
yearly_bonus_left = int(bonus) * int(salary) / 2
savings = yearly_salary * (percentage_left * 0.01) + yearly_bonus_left
print("На ипотеку было потрачено: ",mortgage_yearly_spend)
print("Было накоплено: ",savings)


# In[ ]:




